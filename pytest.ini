[tool:pytest]
# Pytest configuration file for Universal Encryption Platform

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 6.0

# Add options
addopts = 
    -v
    --strict-markers
    --strict-config
    --tb=short
    --cov=.
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=json:coverage.json
    --cov-fail-under=80
    --durations=10
    --maxfail=3

# Markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    performance: marks tests as performance benchmarks  
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    security: marks tests as security tests
    crypto: marks tests as cryptography tests
    api: marks tests as API tests
    file: marks tests as file handling tests

# Test timeout (in seconds)
timeout = 300

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:requests.*
    ignore::UserWarning:urllib3.*

# Coverage configuration
[coverage:run]
source = .
omit = 
    */tests/*
    */venv/*
    */env/*
    */__pycache__/*
    */migrations/*
    setup.py
    conftest.py
    */conftest.py
    test_*.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ .__main__:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov
title = Universal Encryption Platform - Test Coverage Report

[coverage:json]
output = coverage.json